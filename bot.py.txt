import os
import time
import uuid
import telebot
import speech_recognition as sr
from moviepy.video.io.VideoFileClip import VideoFileClip
from pydub import AudioSegment

TOKEN = "7508384788:AAGV1qiH5p--KYs_GCS08ZLCWkNHVPH1Zpg"
bot = telebot.TeleBot(TOKEN)

TEMP_DIR = "temp"
os.makedirs(TEMP_DIR, exist_ok=True)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_lang = {}

MAX_FILE_SIZE = 50 * 1024 * 1024  # 50 –ú–ë –ª–∏–º–∏—Ç Telegram


@bot.message_handler(commands=['start'])
def start(message):
    user_lang[message.from_user.id] = 'en-US'  # —è–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
    bot.send_message(
        message.chat.id,
        "üëã –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∞—É–¥–∏–æ –∏–ª–∏ –≤–∏–¥–µ–æ, –∏ —è –ø–µ—Ä–µ–≤–µ–¥—É –µ–≥–æ –≤ —Ç–µ–∫—Å—Ç.\n\n"
        "–ß—Ç–æ–±—ã —Å–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É:\n"
        "/lang en-US ‚Äî –¥–ª—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ\n"
        "/lang ru-RU ‚Äî –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ –∏ —Ç.–¥.")


@bot.message_handler(commands=['lang'])
def set_language(message):
    parts = message.text.split()
    if len(parts) == 2:
        lang_code = parts[1].strip()
        user_lang[message.from_user.id] = lang_code
        bot.send_message(message.chat.id,
                         f"‚úÖ –Ø–∑—ã–∫ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞: {lang_code}")
    else:
        bot.send_message(
            message.chat.id,
            "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /lang <–∫–æ–¥ —è–∑—ã–∫–∞>, –Ω–∞–ø—Ä–∏–º–µ—Ä /lang en-US –∏–ª–∏ /lang ru-RU"
        )


def convert_audio_to_text(file_path, lang):
    recognizer = sr.Recognizer()
    with sr.AudioFile(file_path) as source:
        audio_data = recognizer.record(source)
        try:
            text = recognizer.recognize_google(audio_data, language=lang)
            print(f"[INFO] –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {text}")
            return text
        except sr.UnknownValueError:
            return "–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å."
        except sr.RequestError as e:
            return f"–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è: {e}"


@bot.message_handler(content_types=['audio', 'voice'])
def handle_audio(message):
    try:
        lang = user_lang.get(message.from_user.id, 'en-US')
        file_info = bot.get_file(message.audio.file_id if message.content_type
                                 == 'audio' else message.voice.file_id)
        downloaded_file = bot.download_file(file_info.file_path)

        unique_id = str(uuid.uuid4())
        file_path = os.path.join(TEMP_DIR, f"{unique_id}.ogg")
        wav_path = os.path.join(TEMP_DIR, f"{unique_id}.wav")

        with open(file_path, 'wb') as f:
            f.write(downloaded_file)

        AudioSegment.from_file(file_path).export(wav_path, format="wav")

        text = convert_audio_to_text(wav_path, lang)
        bot.send_message(message.chat.id, text)

        # –û—á–∏—Å—Ç–∫–∞
        os.remove(file_path)
        os.remove(wav_path)

    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ: {e}")
        bot.send_message(message.chat.id,
                         "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ.")


@bot.message_handler(content_types=['video', 'video_note'])
def handle_video(message):
    try:
        lang = user_lang.get(message.from_user.id, 'en-US')

        file_id = message.video.file_id if message.content_type == 'video' else message.video_note.file_id
        file_info = bot.get_file(file_id)

        if file_info.file_size > MAX_FILE_SIZE:
            bot.send_message(
                message.chat.id,
                "‚ö†Ô∏è –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ —Ä–∞–∑–º–µ—Ä–æ–º –¥–æ 50 –ú–ë."
            )
            return

        downloaded_file = bot.download_file(file_info.file_path)

        unique_id = str(uuid.uuid4())
        video_path = os.path.join(TEMP_DIR, f"{unique_id}.mp4")
        audio_path = os.path.join(TEMP_DIR, f"{unique_id}.wav")

        with open(video_path, 'wb') as f:
            f.write(downloaded_file)
        print(f"[INFO] –í–∏–¥–µ–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {video_path}")

        video = VideoFileClip(video_path)

        if video.audio is None:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –í –≤–∏–¥–µ–æ –Ω–µ—Ç –∞—É–¥–∏–æ–¥–æ—Ä–æ–∂–∫–∏.")
            video.close()
            os.remove(video_path)
            return

        video.audio.write_audiofile(audio_path, fps=16000)
        print(f"[INFO] –ê—É–¥–∏–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ: {audio_path}")

        text = convert_audio_to_text(audio_path, lang)

        if len(text) > 4000:
            text = text[:4000] + "\n\n[–¢–µ–∫—Å—Ç –æ–±—Ä–µ–∑–∞–Ω]"

        bot.send_message(message.chat.id, text)

        # –û—á–∏—Å—Ç–∫–∞
        video.close()
        os.remove(video_path)
        os.remove(audio_path)

    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ: {e}")
        bot.send_message(message.chat.id,
                         "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ.")


def start_bot():
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    while True:
        try:
            bot.infinity_polling(timeout=900, long_polling_timeout=900)
        except Exception as e:
            print(f"[ERROR] –°–±–æ–π –≤ polling: {e}")
            time.sleep(5)


# –û—Å—Ç–∞–≤–ª–µ–Ω–æ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
if __name__ == "__main__":
    start_bot()
